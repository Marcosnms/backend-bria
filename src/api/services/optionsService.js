const axios = require("axios");

const optionService = async (whatsappNumber, whatsapp_token, to, flow) => {
  // caso onboarding

  if (flow === "01") {
    try {
      console.log("chegou no optionService");
      console.log(whatsappNumber, whatsapp_token, to);

      const listMessage = {
        type: "list",
        header: {
          type: "text",
          text: "‚ò∞  Vamos come√ßar",
        },
        body: {
          text: "Escolha a op√ß√£o abaixo e deixe a magia acontecer! üåü",
        },
        footer: {
          text: "BRIA, a Intelig√™ncia Coletiva da Borogoland",
        },
        action: {
          button: "escolher",
          sections: [
            {
              title: "Listagem de Servi√ßos",
              rows: [
                {
                  id: "user_profile",
                  title: "üë§ Seu perfil",
                  description:
                    "Configure seus objetivos, suas prefer√™ncias e defina o SEU Borogod√≥!",
                },
              ],
            },
          ],
        },
      };
      const data = {
        messaging_product: "whatsapp",
        recipient_type: "individual",
        to: to,
        type: "interactive",
        interactive: listMessage,
      };

      const response = await axios.post(
        `https://graph.facebook.com/v18.0/${whatsappNumber}/messages`,
        data,
        {
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${whatsapp_token}`,
          },
        }
      );

      console.log("Lista de op√ß√µes enviada com sucesso:", response.data);
    } catch (error) {
      console.error("Erro ao enviar lista de op√ß√µes:", error);
    }
  } else {
    // caso n√£o seja onboarding
    try {
      console.log("chegou no optionService");
      console.log(whatsappNumber, whatsapp_token, to);

      const listMessage = {
        type: "list",
        header: {
          type: "text",
          text: "‚ò∞  Funcionalidades",
        },
        body: {
          text: "Escolha uma op√ß√£o abaixo e deixe a magia acontecer! üåü",
        },
        footer: {
          text: "BRIA, a Intelig√™ncia Coletiva da Borogoland",
        },
        action: {
          button: "escolher",
          sections: [
            {
              title: "Listagem de Servi√ßos",
              rows: [
                {
                  id: "user_profile",
                  title: "üë§ Seu perfil",
                  description:
                    "Configure seus objetivos, suas prefer√™ncias e defina o SEU Borogod√≥!",
                },
                {
                  id: "upgrade_2024",
                  title: "üöÄ Upgrade KIT 2024",
                  description:
                    "Tudo o que voc√™ precisa saber em tecnologia para 2024",
                },
                {
                  id: "useful_links",
                  title: "üîó Links √∫teis",
                  description: "Acesse recursos escolhidos a dedo para voc√™!",
                },
                {
                  id: "members_area",
                  title: "üë• √Årea de Membros",
                  description:
                    "Eventos, Mentorias, Notifica√ß√µes, Ferramentas, Suporte e Acompanhamento.",
                },
                {
                  id: "borogoland_info",
                  title: "üåç Sobre a Borogoland",
                  description:
                    "Descubra mais sobre nosso funcionamento e como participar.",
                },
                {
                  id: "central_servicos",
                  title: "üí°Servi√ßos Criativos ",
                  description:
                    "Procurando um profissional criativo? Explore a Central de Servi√ßos.",
                },
                {
                  id: "wallet",
                  title: "üîê Sua wallet",
                  description:
                    "Acesse sua Wallet e veja seus Borogod√≥s acumulados. ",
                },
              ],
            },
          ],
        },
      };
      const data = {
        messaging_product: "whatsapp",
        recipient_type: "individual",
        to: to,
        type: "interactive",
        interactive: listMessage,
      };

      const response = await axios.post(
        `https://graph.facebook.com/v18.0/${whatsappNumber}/messages`,
        data,
        {
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${whatsapp_token}`,
          },
        }
      );

      console.log("Lista de op√ß√µes enviada com sucesso:", response.data);
    } catch (error) {
      console.error("Erro ao enviar lista de op√ß√µes:", error);
    }
  }
};

module.exports = optionService;
