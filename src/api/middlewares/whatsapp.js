const { Console } = require("console");
const https = require("https");

const whatsappMiddleware = (req, res, next) => {
  console.log("chegou no whatsappMiddleware");

  // console.log("req.body:", JSON.stringify(req.body, null, 2));

  //__________________________parte receptora________________________//
  if (req.body.object) {
    if (
      req.body.entry &&
      req.body.entry[0].changes &&
      req.body.entry[0].changes[0] &&
      req.body.entry[0].changes[0].value.messages &&
      req.body.entry[0].changes[0].value.messages[0]
    ) {
      const whatsappNumber =
        req.body.entry[0].changes[0].value.metadata.phone_number_id;
      const from = req.body.entry[0].changes[0].value.messages[0].from; // extract the phone number from the webhook payload
      const name = req.body.entry[0].changes[0].value.contacts[0].profile.name;
      const msg_type = req.body.entry[0].changes[0].value.messages[0].type; // extract the message type from the webhook payload

      //__________________________configura√ß√£o para respostas de texto________________________//
      // 01. CASO A MENSAGEM SEJA DE TEXTO
      if (msg_type === "text") {
        const msg_body =
          req.body.entry[0].changes[0].value.messages[0].text.body; // extract the message text from the webhook payload

        // Anexa as informa√ß√µes extra√≠das √† solicita√ß√£o para uso posterior
        req.whatsapp = {
          whatsappNumber,
          from,
          msg_body,
          name,
          msg_type,
        };
        console.log("texto:", req.whatsapp);
        next(); // envia para a pr√≥xima etapa - handleMessages

        //______________________ configura√ß√£o para respostas interativas _______________________//
      }
      // 02. CASO A MENSAGEM SEJA UMA RESPOSTA A UMA MENSAGEM INTERATIVA
      else if (msg_type === "interactive") {
        console.log("mensagem interativa");
        const messageData = req.body.entry[0].changes[0].value.messages[0];

        // 02.01 - caso seja a resposta de uma lista
        if (messageData.interactive.type === "list_reply") {
          const selectedOptionId = messageData.interactive.list_reply.id;

          // Anexa as informa√ß√µes extra√≠das √† solicita√ß√£o para uso posterior
          req.whatsapp = {
            whatsappNumber,
            from,
            msg_body: "resposta interativa",
            name,
            msg_type,
          };

          // op√ß√µes de lista dispon√≠veis
          switch (selectedOptionId) {
            // 01. ONBOARDING - OK
            case "onboarding":
              req.response = {
                message:
                  "√ìtimo! Vamos configurar seu perfil. Me responda por gentileza algumas perguntas para que eu possa te conhecer melhor e ser mais assertiva nas minhas repostas e comportamento.",
                type: "text",
                flow: "onboarding",
              };
              next();
              break;

            // TODO: 02. INFORMA√á√ïES SOBRE A TRILHA DE UPGRADE
            case "upgrade":
              req.response = {
                message:
                  "Fique atualizado com o conte√∫do estruturado por nossos especialistas.\n\n" +
                  "Conhe√ßa as trilhas de conhecimento interativas e gamificadas que v√£o te ajudar a alcan√ßar a sustentabilidade criativa, social e financeira.\n\n" +
                  "As trilhas atuais dispon√≠veis s√£o:\n\n" +
                  "üß† Trilha da Intelig√™ncia Artificial Generativa\n" +
                  "üåê Trilha da Web3\n" +
                  "üåå  Trilha do Metaverso\n\n" +
                  "Qual trilha voc√™ quer conhecer?",
                type: "text",
                flow: "upgrade",
              };
              next();
              break;

            // TODO: 03. INFORMA√á√ïES SOBRE A BOROGOLAND
            case "info":
              // Envie uma mensagem de texto sobre a Borogoland
              req.response = {
                message:
                  "Que bom que voc√™ quer saber mais sobre a Borogoland!\n\nA Borogoland √© a terra virtual do Borogod√≥ que tem como objetivo ajudar as pessoas a alcan√ßar a sustentabilidade criativa, social e financeira.\n\nQual tipo de d√∫vida voc√™ tem sobre a Borogoland ou como posso te ajudar?",
                type: "text",
                flow: "info",
              };
              next();
              break;

            // TODO: 04. √ÅREA DE MEMBROS
            case "members":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "√ìtimo! Vou te mostrar as op√ß√µes de servi√ßos que temos dispon√≠veis para os nossos membros!",
                type: "text",
                flow: "members",
              };
              next();
              break;

            // TODO: 04.01 √ÅREA DE MEMBROS - EVENTOS
            case "eventos":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Em breve novos eventos ser√£o divulgados. Caso queira ser avisado sobre a disponibilidade e benef√≠cios de ser um membro, escreva:\n\neu quero",
                type: "text",
                flow: "eventos",
              };
              next();
              break;

            // TODO: 04.02 √ÅREA DE MEMBROS - MENTORIA
            case "mentoria":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Em breve novas mentorias ser√£o divulgadas. Caso queira ser avisado sobre a disponibilidade e benef√≠cios de ser um membro, escreva:\n\neu quero",
                type: "text",
                flow: "mentoria",
              };
              next();
              break;

            // TODO: 04.03 √ÅREA DE MEMBROS - LISTA DE MEMBROS
            case "lista_membros":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Em breve novos membros ser√£o divulgados. Caso queira ser avisado sobre a disponibilidade e benef√≠cios de ser um membro, escreva:\n\neu quero",
                type: "text",
                flow: "lista",
              };
              next();
              break;

            // TODO: 04.04 √ÅREA DE MEMBROS - SUPORTE
            case "suporte":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Fale comigo! Como posso te ajudar?",
                type: "text",
                flow: "suporte",
              };
              next();
              break;

            // TODO: 05. DAO
            case "borogodao":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Em breve voc√™ saber√° tudo para ser um membro! Caso queira ser avisado sobre a disponibilidade e benef√≠cios de ser um membro, escreva:\n\neu quero",
                type: "text",
                flow: "borogodao",
              };
              next();
              break;

            // TODO: 06. PERFIL DO USU√ÅRIO
            case "profile":
              req.response = {
                message:
                  "Em breve, vamos melhorar seu perfil. Por enquanto, me pergunte alguma coisa e eu te responderei. ",
                type: "text",
                flow: "perfil",
              };

              next();
              break;

            // TODO: 07. CENTRAL DE SERVI√áOS
            case "servicos":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Em breve, oportunidades para voc√™ ganhar dinheiro com seu Borogod√≥!",
                type: "text",
                flow: "servi√ßos",
              };
              next();
              break;

            // TODO: 08. CARTEIRA
            case "wallet":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Em breve, voc√™ poder√° ver seus BRGDs acumulados e como us√°-los na Borogoland. T√° vindo coisa muito legal por a√≠! üí´",
                type: "text",
                flow: "wallet",
              };
              next();
              break;

            // TODO: 09. BOROGODOMETRO
            case "borogodometro":
              // Envie uma imagem representando a √°rea de membros
              req.response = {
                message:
                  "Descubra o n√≠vel do seu Borogod√≥!\n\n" +
                  "Acesse o link: https://www.borogodometro.com.br e fa√ßa seu teste agora mesmo. √â gr√°tis, facil e r√°pido!\n\n" +
                  "Em breve vai ter um Borogodometro aqui tamb√©m!",
                type: "text",
                flow: "borogodometro",
              };
              next();
              break;
          }
        }

        // 02.02 - caso seja a resposta de um bot√£o
        else if (messageData.interactive.type === "button_reply") {
          const selectedOptionId = messageData.interactive.button_reply.id;
          // Anexa as informa√ß√µes extra√≠das √† solicita√ß√£o para uso posterior
          req.whatsapp = {
            whatsappNumber,
            from,
            msg_body: selectedOptionId,
            name,
            msg_type: "text",
          };
          next();
        }
      }
      // 03. CASO OUTRA MENSAGEM SEJA ENVIADA
      else {
        // TODO: ajustar a resposta para dizer que n√£o aceita esse tipo de mensagem no momento
        console.log(
          "Aqui depois vai a rota para confirma√ß√µes de status das mensagens"
        );
      }
    }
  }
};
// ______________________fun√ß√µes do whatsapp________________________//
// _________________________________________________________________//

// 01. FUN√á√ÉO PARA ENVIAR UMA MENSAGEM DE TEXTO - 0K
whatsappMiddleware.sendText = (
  whatsappNumber,
  whatsapp_token,
  to,
  reply_message,
  resp
) => {
  // console.log("dados enviados sendreply:", whatsappNumber, whatsapp_token, to, reply_message, resp)
  const data = JSON.stringify({
    messaging_product: "whatsapp",
    to: to,
    text: { body: reply_message },
  });

  const path =
    "/v18.0/" + whatsappNumber + "/messages?access_token=" + whatsapp_token;
  const options = {
    host: "graph.facebook.com",
    path: path,
    method: "POST",
    headers: { "Content-Type": "application/json" },
  };
  const callback = (response) => {
    let str = "";
    response.on("data", (chunk) => {
      str += chunk;
    });
    response.on("end", () => {});
  };
  const req = https.request(options, callback);
  req.on("error", (e) => {});
  req.write(data);
  req.end();
  console.log("Enviou:", data);
  resp.sendStatus(200);
};

// 02. FUN√á√ÉO PARA RESPONDER COM UMA IMAGEM
// TODO: ajustar a fun√ß√£o para enviar uma imagem. Por enquanto s√≥ responde com um texto espec√≠fico
whatsappMiddleware.sendImage = (
  whatsappNumber,
  whatsapp_token,
  to,
  reply_message,
  resp
) => {
  // console.log("dados enviados sendreply:", whatsappNumber, whatsapp_token, to, reply_message, resp)
  const data = JSON.stringify({
    messaging_product: "whatsapp",
    to: to,
    text: { body: reply_message },
  });

  const path =
    "/v18.0/" + whatsappNumber + "/messages?access_token=" + whatsapp_token;
  const options = {
    host: "graph.facebook.com",
    path: path,
    method: "POST",
    headers: { "Content-Type": "application/json" },
  };
  const callback = (response) => {
    let str = "";
    response.on("data", (chunk) => {
      str += chunk;
    });
    response.on("end", () => {});
  };
  const req = https.request(options, callback);
  req.on("error", (e) => {});
  req.write(data);
  req.end();
  console.log("Enviou");
  resp.sendStatus(200);
};

module.exports = whatsappMiddleware;
